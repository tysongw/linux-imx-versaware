// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright 2019 NXP
 * Copyright 2019-2020 Variscite Ltd.
 */

/dts-v1/;
 
#include <dt-bindings/usb/pd.h>
#include "imx8mn-var-som.dtsi"

/ {
	model = "Variscite VAR-SOM-MX8M-NANO on Symphony-Board 1.4a and above";
	compatible = "variscite,var-som-mx8mn", "fsl,imx8mn";

	chosen {
		stdout-path = &uart4;
	};

	backlight: backlight {
		compatible = "pwm-backlight";
		pwms = <&pwm1 0 1000000 0>;
		brightness-levels = < 0  1  2  3  4  5  6  7  8  9
				     10 11 12 13 14 15 16 17 18 19
				     20 21 22 23 24 25 26 27 28 29
				     30 31 32 33 34 35 36 37 38 39
				     40 41 42 43 44 45 46 47 48 49
				     50 51 52 53 54 55 56 57 58 59
				     60 61 62 63 64 65 66 67 68 69
				     70 71 72 73 74 75 76 77 78 79
				     80 81 82 83 84 85 86 87 88 89
				     90 91 92 93 94 95 96 97 98 99
				    100>;
		default-brightness-level = <80>;
		status = "disabled";
	};

	gpio-keys {
		compatible = "gpio-keys";
		status = "okay";

		back {
			label = "Back";
			gpios = <&pca9534 1 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_BACK>;
			wakeup-source;
		};

		home {
			label = "Home";
			gpios = <&pca9534 2 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_HOME>;
			wakeup-source;
		};

		menu {
			label = "Menu";
			gpios = <&pca9534 3 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_MENU>;
			wakeup-source;
		};
	};

	leds {
		compatible = "gpio-leds";
		status = "okay";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_leds>;

		led1 {
			label = "led1";
			gpios = <&gpio5 11 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "default-on";
		};

		led2 {
			label = "led2";
			gpios = <&gpio5 10 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "default-on";
		};

	};

	batt_management {
		compatible = "gpio_batt_management";
		status = "okay";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_batt_management>;

		CHG_ACOK { 
			label = "CHG_ACOK";
			gpios = <&gpio5 0>; // dont know if I need 'GPIO_ACTIVE_SOMETHING' for an input
			input;
			// pin is low when external +5V is connected. this is how we know when to charge
		};
		
		CHG_EN { 
			label = "CHG_EN";
			gpios = <&gpio4 30 GPIO_ACTIVE_HIGH>; 
			linux,default-trigger = "default-on";
			//need to be able to toggle LOW when we want to charge battery (controlled by matts code)
		};
	
		CHG_STATE { 
			label = "CHG_STATE";
			gpios = <&gpio5 29>; // dont know if I need 'GPIO_ACTIVE_SOMETHING' for an input
			input;
			// pin is low when battery is charging and below 90% capacity. We need to read this pin in order to tell the system when to stop charging.
		};	

		Batt_Mon_EN {
			label = "Batt_Mon_EN";
			gpios = <&gpio4 31 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "default-on";
			// this pin needs to be driven high to enable the battery fuel gauge IC
		};
	
	strain_gauge {
		compatible = "gpio_strain_gauge"; // these pins are not gpios though does this naming convention matter?
		status = "okay";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_strain_gauge>;
	
		HDOUT {
			label = "HDOUT";
			// dont know how to configure as a data channel controlled by the HX711 library
		};
	
		HCLKIN {
			label = "HCLKIN";
			// dont know how to configure as a clock channel controlled by the HX711 library
		};

	buzzer {
		compatible = "gpio_buzzer";
		status = "okay";
		pinctrl-names = "defualt";
		pinctrl-0 = <&pinctrl_buzzerpwm>;
		};

	reg_usdhc2_vmmc: regulator-usdhc2 {
		compatible = "regulator-fixed";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_reg_usdhc2_vmmc>;
		regulator-name = "VSD_3V3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = <&gpio4 22 GPIO_ACTIVE_HIGH>;
		off-on-delay = <20000>;
		enable-active-high;
	};

	extcon_usb1: extcon_usb1 {
		compatible = "linux,extcon-usb-gpio";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_extcon>;
		id-gpio = <&gpio1 11 GPIO_ACTIVE_HIGH>;
		status = "okay";
	};
};

&gpio5 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_vw_lvds>;

	vw-lvds-backlight {
		gpio-hog;
		gpios = <24 GPIO_ACTIVE_HIGH>;
		output-high;
		// this is the shutdown pin for the boost on the +26V backlight line
	};

	vw-lvds-reset {
		gpio-hog;
		gpios = <27 GPIO_ACTIVE_HIGH>;
		output-high;
		// this is the reset pin for the lvds display
	};

};

&gpio1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_vw_lvds_stndby>
	
	vw-lvds-stby {
		gpio-hog;
		gpios = <8 GPIO_ACTIVE_HIGH>;
		output-high;
		// this is the stndby pin on the lvds display 
	};

&iomuxc {
	
	// ADDED STRAIN GAUGE (HX711 IC) PINS
	pinctrl_strain_gauge: strain_gauge {
		fsl,pins = <
			MX8MN_IOMUXC_ECSPI2_SS0_GPIO5_IO13          // do not know what pad mux id to configure for data out pin for the HX711 IC 
			MX8MN_IOMUXC_SPDIF_TX_GPIO5_IO3             // do not know what pad mux id to configure for clock in pin for the HX711 IC
			>;
	};

	// ADDED BATTERY MANAGEMENT PINS
	pinctrl_batt_management: batt_management {
		fsl,pins = <
			MX8MN_IOMUXC_SAI3_TXC_GPIO5_IO0           0x16 // do not know what this needs to be for an input
			MX8MN_IOMUXC_SAI3_RXD_GPIO4_IO30 		0x16 // this is an output so same as below??
			MX8MN_IOMUXC_UART4_TXD_GPIO5_IO29 		0x16 // do not know what this needs to be for an input
			MX8MN_IOMUXC_SAI3_TXFS_GPIO4_IO31 		0x16 // this is an output so same as below??
			>;
	};

	// ADDED LED TESTING PINS
	pinctrl_leds: leds {
		fsl,pins = <
			MX8MN_IOMUXC_ECSPI2_MOSI_GPIO5_IO11       0x16 /*do not know it is 0x16 or not*/
			MX8MN_IOMUXC_ECSPI2_SCLK_GPIO5_IO10		0x16 /*do not know it is 0x16 or not*/
                >;
	};

	pinctrl_touch: goodixtouch{
		fsl,pins = <
			MX8MN_IOMUXC_UART3_RXD_GPIO5_IO26        	0x16 /*do not know it is 0x16 or not*/
			MX8MN_IOMUXC_UART2_TXD_GPIO5_IO25		0x16 /*do not know it is 0x16 or not*/
                >;
	};

	// ADDED LVDS STANDBY PIN
	pinctrl_vw_lvds_stndby: vw_stndby {
		fsl,pins = <	
			MX8MN_IOMUXC_GPIO1_IO08_GPIO1_IO8         0x16 // this is an output
			>;
	};
	
	// ADDED LVDS BACKLIGHT AND RESET PINS	
	pinctrl_vw_lvds: vw_lvds {
		fsl,pins = <
			MX8MN_IOMUXC_UART2_RXD_GPIO5_IO24		0x16 /* backlight */
			MX8MN_IOMUXC_UART3_TXD_GPIO5_IO27		0x16 /* reset */
		>;
	};

	// ADDED BUZZER PWM SIGNAL
	pinctrl_buzzerpwm: buzzer {
		fsl,pins = <
			MX8MN_IOMUXC_SPDIF_RX_PWM2_OUT		0X06 // what is register value for pwm?
		>;
	};

	pinctrl_csi1: csi1grp {
		fsl,pins = <
			MX8MN_IOMUXC_GPIO1_IO13_GPIO1_IO13		0x19
			MX8MN_IOMUXC_ECSPI2_MISO_GPIO5_IO12		0x19
		>;
	};

	pinctrl_i2c2: i2c2grp {
		fsl,pins = <
			MX8MN_IOMUXC_I2C2_SCL_I2C2_SCL			0x400001c3
			MX8MN_IOMUXC_I2C2_SDA_I2C2_SDA			0x400001c3
		>;
	};

	pinctrl_i2c4: i2c4grp {
		fsl,pins = <
			MX8MN_IOMUXC_I2C4_SCL_I2C4_SCL			0x400001c3
			MX8MN_IOMUXC_I2C4_SDA_I2C4_SDA			0x400001c3
		>;
	};

	pinctrl_i2c2_gpio: i2c2grp-gpio {
		fsl,pins = <
			MX8MN_IOMUXC_I2C2_SCL_GPIO5_IO16		0x1c3
			MX8MN_IOMUXC_I2C2_SDA_GPIO5_IO17		0x1c3
		>;
	};

	pinctrl_i2c4_gpio: i2c4grp-gpio {
		fsl,pins = <
			MX8MN_IOMUXC_I2C4_SCL_GPIO5_IO20		0x1c3
			MX8MN_IOMUXC_I2C4_SDA_GPIO5_IO21		0x1c3
		>;
	};

	pinctrl_pca9534: pca9534grp {
		fsl,pins = <
			MX8MN_IOMUXC_GPIO1_IO07_GPIO1_IO7		0x16
		>;
	};
	
	pwm1grp {
		fsl,pins = <
			MX8MN_IOMUXC_SPDIF_EXT_CLK_PWM1_OUT		0x06
		>;
	};

	pinctrl_uart1: uart1grp {
		fsl,pins = <
			MX8MN_IOMUXC_UART1_RXD_UART1_DCE_RX		0x140
			MX8MN_IOMUXC_UART1_TXD_UART1_DCE_TX		0x140
		>;
	};

	pinctrl_uart3: uart3grp {
		fsl,pins = <
			MX8MN_IOMUXC_UART3_RXD_UART3_DCE_RX		0x140
			MX8MN_IOMUXC_UART3_TXD_UART3_DCE_TX		0x140
		>;
	};

	pinctrl_uart4: uart4grp {
		fsl,pins = <
			MX8MN_IOMUXC_UART4_RXD_UART4_DCE_RX		0x140
			MX8MN_IOMUXC_UART4_TXD_UART4_DCE_TX		0x140
		>;
	};

	pinctrl_reg_usdhc2_vmmc: regusdhc2vmmc {
		fsl,pins = <
			MX8MN_IOMUXC_SAI2_RXC_GPIO4_IO22		0x41
		>;
	};

	pinctrl_usdhc2: usdhc2grp {
		fsl,pins = <
			MX8MN_IOMUXC_SD2_CLK_USDHC2_CLK			0x190
			MX8MN_IOMUXC_SD2_CMD_USDHC2_CMD			0x1d0
			MX8MN_IOMUXC_SD2_DATA0_USDHC2_DATA0		0x1d0
			MX8MN_IOMUXC_SD2_DATA1_USDHC2_DATA1		0x1d0
			MX8MN_IOMUXC_SD2_DATA2_USDHC2_DATA2		0x1d0
			MX8MN_IOMUXC_SD2_DATA3_USDHC2_DATA3		0x1d0
			MX8MN_IOMUXC_GPIO1_IO04_USDHC2_VSELECT		0x1d0
		>;
	};

	pinctrl_usdhc2_100mhz: usdhc2grp100mhz {
		fsl,pins = <
			MX8MN_IOMUXC_SD2_CLK_USDHC2_CLK			0x194
			MX8MN_IOMUXC_SD2_CMD_USDHC2_CMD			0x1d4
			MX8MN_IOMUXC_SD2_DATA0_USDHC2_DATA0		0x1d4
			MX8MN_IOMUXC_SD2_DATA1_USDHC2_DATA1		0x1d4
			MX8MN_IOMUXC_SD2_DATA2_USDHC2_DATA2		0x1d4
			MX8MN_IOMUXC_SD2_DATA3_USDHC2_DATA3		0x1d4
			MX8MN_IOMUXC_GPIO1_IO04_USDHC2_VSELECT		0x1d0
		>;
	};

	pinctrl_usdhc2_200mhz: usdhc2grp200mhz {
		fsl,pins = <
			MX8MN_IOMUXC_SD2_CLK_USDHC2_CLK			0x196
			MX8MN_IOMUXC_SD2_CMD_USDHC2_CMD			0x1d6
			MX8MN_IOMUXC_SD2_DATA0_USDHC2_DATA0		0x1d6
			MX8MN_IOMUXC_SD2_DATA1_USDHC2_DATA1		0x1d6
			MX8MN_IOMUXC_SD2_DATA2_USDHC2_DATA2		0x1d6
			MX8MN_IOMUXC_SD2_DATA3_USDHC2_DATA3		0x1d6
			MX8MN_IOMUXC_GPIO1_IO04_USDHC2_VSELECT		0x1d0
		>;
	};

	pinctrl_usdhc2_gpio: usdhc2grpgpio {
		fsl,pins = <
			MX8MN_IOMUXC_GPIO1_IO10_GPIO1_IO10		0x41
		>;
	};

	pinctrl_extcon: extcongrp {
		fsl,pins = <
			MX8MN_IOMUXC_GPIO1_IO11_GPIO1_IO11		0x16
		>;
	};
};

&i2c2 {
	clock-frequency = <100000>;
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&pinctrl_i2c2>;
	pinctrl-1 = <&pinctrl_i2c2_gpio>;
	scl-gpios = <&gpio5 16 GPIO_ACTIVE_HIGH>;
	sda-gpios = <&gpio5 17 GPIO_ACTIVE_HIGH>;
	status = "okay";

	ov5640_mipi1: ov5640_mipi1@3c {
		status = "disabled";
		compatible = "ovti,ov5640";
		reg = <0x3c>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_csi1>;
		clocks = <&clk IMX8MN_CLK_CLKO1>;
		clock-names = "xclk";
/* Disabled CLKO1, since VAR-SOM-MX8M-NANO camera expansion board uses
 * its own oscillator. Enable CLK01 if your design requires it
 */
#if 0
		assigned-clocks = <&clk IMX8MN_CLK_CLKO1>;
		assigned-clock-parents = <&clk IMX8MN_CLK_24M>;
#endif
		assigned-clock-rates = <24000000>;
		csi_id = <0>;
		powerdown-gpios = <&gpio5 12 GPIO_ACTIVE_HIGH>;
		reset-gpios = <&gpio1 13 GPIO_ACTIVE_LOW>;
		mclk = <24000000>;
		mclk_source = <0>;
		mipi_csi;
		port {
			ov5640_ep: endpoint {
				remote-endpoint = <&mipi1_sensor_ep>;
				data-lanes = <1 2>;
				clocks-lanes = <0>;
			};
		};
	};

	/* GPIO expander */
	pca9534: gpio@20 {
		status = "okay";
		compatible = "nxp,pca9534";
		reg = <0x20>;
		gpio-controller;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_pca9534>;
		interrupt-parent = <&gpio1>;
		interrupts = <7 IRQ_TYPE_EDGE_FALLING>;
		#gpio-cells = <2>;
		wakeup-source;

		usb3_sel_hog {
			gpio-hog;
			gpios = <4 GPIO_ACTIVE_HIGH>;
			output-low;
			line-name = "usb3_sel";
		};

		enet_rst_hog {
			gpio-hog;
			gpios = <5 GPIO_ACTIVE_HIGH>;
			output-low;
			line-name = "enet_rst";
		};

		som_vsel_hog {
			gpio-hog;
			gpios = <6 GPIO_ACTIVE_HIGH>;
			output-low;
			line-name = "som_vsel";
		};

		enet_sel_hog {
			gpio-hog;
			gpios = <7 GPIO_ACTIVE_HIGH>;
			output-low;
			line-name = "enet_sel";
		};
	};
};

&i2c3 {
	/* Capacitive touch controller 
	ft5x06_ts: ft5x06_ts@38 {
		status = "disabled";
		compatible = "edt,edt-ft5206";
		reg = <0x38>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_captouch>;
		interrupt-parent = <&gpio5>;
		interrupts = <4 IRQ_TYPE_EDGE_FALLING>;
		touchscreen-size-x = <800>;
		touchscreen-size-y = <480>;
		touchscreen-inverted-x;
		touchscreen-inverted-y;
		wakeup-source;
	}; */

	/* DS1337 RTC module */
	rtc@68 {
		status = "okay";
		compatible = "dallas,ds1337";
		reg = <0x68>;
	};
};

&i2c4 {
	clock-frequency = <400000>;
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&pinctrl_i2c4>;
	pinctrl-1 = <&pinctrl_i2c4_gpio>;
	scl-gpios = <&gpio5 20 GPIO_ACTIVE_HIGH>;
	sda-gpios = <&gpio5 21 GPIO_ACTIVE_HIGH>;
	status = "okay";
	
	gt911@14 {
			compatible = "goodix,gt911";
			reg = <0x14>; /* I2C address of GT911. This can also be xBB or x28 or x29 */
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl_touch>; /* This controls the backlight which we are not using (pwmB) */
			interrupt-parent = <&gpio5>; 
			interrupts = <26 IRQ_TYPE_EDGE_RISING>;
			irq-gpios = <&gpio5 26 GPIO_ACTIVE_HIGH>; /* This pin should be active when bluetooth function is disabled */ 
			reset-gpios = <&gpio5 25 GPIO_ACTIVE_HIGH>; /* This pin should be active when bluetooth function is disabled */ 
                       touchscreen-size-x = <800>; /* pixel size width */
		        touchscreen-size-y = <480>; /* pixel size height */
		        status = "okay";
			wakeup-source;
	};
};

&mipi_csi_1 {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "disabled";

	port@0 {
		reg = <0>;
		mipi1_sensor_ep: endpoint {
			remote-endpoint = <&ov5640_ep>;
			data-lanes = <2>;
			csis-hs-settle = <13>;
			csis-clk-settle = <2>;
			csis-wclk;
		};
	};
};

&pwm1 {
	status = "disabled";
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm1>;
};

&snvs_pwrkey {
	status = "okay";
};

&snvs_rtc {
	status = "disabled";
};

/* Header */
&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	status = "disabled";
};

/* Header */
&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
	status = "disabled";
};

/* Console */
&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart4>;
	status = "okay";
	/delete-property/ dmas;
	/delete-property/ dma-names;
};

&usbotg1 {
	dr_mode = "otg";
	picophy,pre-emp-curr-control = <3>;
	picophy,dc-vol-level-adjust = <7>;
	hnp-disable;
	srp-disable;
	adp-disable;
	extcon = <0>, <&extcon_usb1>;
	status = "okay";
};

/* SD */
&usdhc2 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc2>, <&pinctrl_usdhc2_gpio>;
	pinctrl-1 = <&pinctrl_usdhc2_100mhz>, <&pinctrl_usdhc2_gpio>;
	pinctrl-2 = <&pinctrl_usdhc2_200mhz>, <&pinctrl_usdhc2_gpio>;
	cd-gpios = <&gpio1 10 GPIO_ACTIVE_LOW>;
	bus-width = <4>;
	vmmc-supply = <&reg_usdhc2_vmmc>;
	status = "okay";
};
